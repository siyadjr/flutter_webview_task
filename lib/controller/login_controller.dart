import 'dart:developer';

import 'package:flutter/material.dart';
import 'package:flutter_task/model/models/country_model.dart';
import 'package:flutter_task/model/servieces/firebase_auth.dart';
import 'package:get/get.dart';

class LoginController extends GetxController {
  List<Country> countries = [
    Country(name: 'Afghanistan', code: 'AF', dialCode: '+93', flag: 'ğŸ‡¦ğŸ‡«'),
    Country(name: 'Albania', code: 'AL', dialCode: '+355', flag: 'ğŸ‡¦ğŸ‡±'),
    Country(name: 'Algeria', code: 'DZ', dialCode: '+213', flag: 'ğŸ‡©ğŸ‡¿'),
    Country(name: 'Andorra', code: 'AD', dialCode: '+376', flag: 'ğŸ‡¦ğŸ‡©'),
    Country(name: 'Angola', code: 'AO', dialCode: '+244', flag: 'ğŸ‡¦ğŸ‡´'),
    Country(name: 'Argentina', code: 'AR', dialCode: '+54', flag: 'ğŸ‡¦ğŸ‡·'),
    Country(name: 'Armenia', code: 'AM', dialCode: '+374', flag: 'ğŸ‡¦ğŸ‡²'),
    Country(name: 'Australia', code: 'AU', dialCode: '+61', flag: 'ğŸ‡¦ğŸ‡º'),
    Country(name: 'Austria', code: 'AT', dialCode: '+43', flag: 'ğŸ‡¦ğŸ‡¹'),
    Country(name: 'Azerbaijan', code: 'AZ', dialCode: '+994', flag: 'ğŸ‡¦ğŸ‡¿'),
    Country(name: 'Bahamas', code: 'BS', dialCode: '+1-242', flag: 'ğŸ‡§ğŸ‡¸'),
    Country(name: 'Bahrain', code: 'BH', dialCode: '+973', flag: 'ğŸ‡§ğŸ‡­'),
    Country(name: 'Bangladesh', code: 'BD', dialCode: '+880', flag: 'ğŸ‡§ğŸ‡©'),
    Country(name: 'Belarus', code: 'BY', dialCode: '+375', flag: 'ğŸ‡§ğŸ‡¾'),
    Country(name: 'Belgium', code: 'BE', dialCode: '+32', flag: 'ğŸ‡§ğŸ‡ª'),
    Country(name: 'Belize', code: 'BZ', dialCode: '+501', flag: 'ğŸ‡§ğŸ‡¿'),
    Country(name: 'Bhutan', code: 'BT', dialCode: '+975', flag: 'ğŸ‡§ğŸ‡¹'),
    Country(name: 'Bolivia', code: 'BO', dialCode: '+591', flag: 'ğŸ‡§ğŸ‡´'),
    Country(
        name: 'Bosnia and Herzegovina',
        code: 'BA',
        dialCode: '+387',
        flag: 'ğŸ‡§ğŸ‡¦'),
    Country(name: 'Botswana', code: 'BW', dialCode: '+267', flag: 'ğŸ‡§ğŸ‡¼'),
    Country(name: 'Brazil', code: 'BR', dialCode: '+55', flag: 'ğŸ‡§ğŸ‡·'),
    Country(name: 'Brunei', code: 'BN', dialCode: '+673', flag: 'ğŸ‡§ğŸ‡³'),
    Country(name: 'Bulgaria', code: 'BG', dialCode: '+359', flag: 'ğŸ‡§ğŸ‡¬'),
    Country(name: 'Burkina Faso', code: 'BF', dialCode: '+226', flag: 'ğŸ‡§ğŸ‡«'),
    Country(name: 'Burundi', code: 'BI', dialCode: '+257', flag: 'ğŸ‡§ğŸ‡®'),
    Country(name: 'Cambodia', code: 'KH', dialCode: '+855', flag: 'ğŸ‡°ğŸ‡­'),
    Country(name: 'Cameroon', code: 'CM', dialCode: '+237', flag: 'ğŸ‡¨ğŸ‡²'),
    Country(name: 'Canada', code: 'CA', dialCode: '+1', flag: 'ğŸ‡¨ğŸ‡¦'),
    Country(name: 'Chile', code: 'CL', dialCode: '+56', flag: 'ğŸ‡¨ğŸ‡±'),
    Country(name: 'China', code: 'CN', dialCode: '+86', flag: 'ğŸ‡¨ğŸ‡³'),
    Country(name: 'Colombia', code: 'CO', dialCode: '+57', flag: 'ğŸ‡¨ğŸ‡´'),
    Country(name: 'Costa Rica', code: 'CR', dialCode: '+506', flag: 'ğŸ‡¨ğŸ‡·'),
    Country(name: 'Croatia', code: 'HR', dialCode: '+385', flag: 'ğŸ‡­ğŸ‡·'),
    Country(name: 'Cuba', code: 'CU', dialCode: '+53', flag: 'ğŸ‡¨ğŸ‡º'),
    Country(name: 'Cyprus', code: 'CY', dialCode: '+357', flag: 'ğŸ‡¨ğŸ‡¾'),
    Country(name: 'Czech Republic', code: 'CZ', dialCode: '+420', flag: 'ğŸ‡¨ğŸ‡¿'),
    Country(name: 'Denmark', code: 'DK', dialCode: '+45', flag: 'ğŸ‡©ğŸ‡°'),
    Country(name: 'Ecuador', code: 'EC', dialCode: '+593', flag: 'ğŸ‡ªğŸ‡¨'),
    Country(name: 'Egypt', code: 'EG', dialCode: '+20', flag: 'ğŸ‡ªğŸ‡¬'),
    Country(name: 'Finland', code: 'FI', dialCode: '+358', flag: 'ğŸ‡«ğŸ‡®'),
    Country(name: 'France', code: 'FR', dialCode: '+33', flag: 'ğŸ‡«ğŸ‡·'),
    Country(name: 'Germany', code: 'DE', dialCode: '+49', flag: 'ğŸ‡©ğŸ‡ª'),
    Country(name: 'Greece', code: 'GR', dialCode: '+30', flag: 'ğŸ‡¬ğŸ‡·'),
    Country(name: 'Hong Kong', code: 'HK', dialCode: '+852', flag: 'ğŸ‡­ğŸ‡°'),
    Country(name: 'Hungary', code: 'HU', dialCode: '+36', flag: 'ğŸ‡­ğŸ‡º'),
    Country(name: 'India', code: 'IN', dialCode: '+91', flag: 'ğŸ‡®ğŸ‡³'),
    Country(name: 'Indonesia', code: 'ID', dialCode: '+62', flag: 'ğŸ‡®ğŸ‡©'),
    Country(name: 'Iran', code: 'IR', dialCode: '+98', flag: 'ğŸ‡®ğŸ‡·'),
    Country(name: 'Iraq', code: 'IQ', dialCode: '+964', flag: 'ğŸ‡®ğŸ‡¶'),
    Country(name: 'Ireland', code: 'IE', dialCode: '+353', flag: 'ğŸ‡®ğŸ‡ª'),
    Country(name: 'Italy', code: 'IT', dialCode: '+39', flag: 'ğŸ‡®ğŸ‡¹'),
    Country(name: 'Japan', code: 'JP', dialCode: '+81', flag: 'ğŸ‡¯ğŸ‡µ'),
    Country(name: 'Kenya', code: 'KE', dialCode: '+254', flag: 'ğŸ‡°ğŸ‡ª'),
    Country(name: 'Malaysia', code: 'MY', dialCode: '+60', flag: 'ğŸ‡²ğŸ‡¾'),
    Country(name: 'Mexico', code: 'MX', dialCode: '+52', flag: 'ğŸ‡²ğŸ‡½'),
    Country(name: 'Netherlands', code: 'NL', dialCode: '+31', flag: 'ğŸ‡³ğŸ‡±'),
    Country(name: 'New Zealand', code: 'NZ', dialCode: '+64', flag: 'ğŸ‡³ğŸ‡¿'),
    Country(name: 'Nigeria', code: 'NG', dialCode: '+234', flag: 'ğŸ‡³ğŸ‡¬'),
    Country(name: 'Norway', code: 'NO', dialCode: '+47', flag: 'ğŸ‡³ğŸ‡´'),
    Country(name: 'Pakistan', code: 'PK', dialCode: '+92', flag: 'ğŸ‡µğŸ‡°'),
    Country(name: 'Philippines', code: 'PH', dialCode: '+63', flag: 'ğŸ‡µğŸ‡­'),
    Country(name: 'Russia', code: 'RU', dialCode: '+7', flag: 'ğŸ‡·ğŸ‡º'),
    Country(name: 'Saudi Arabia', code: 'SA', dialCode: '+966', flag: 'ğŸ‡¸ğŸ‡¦'),
    Country(name: 'South Africa', code: 'ZA', dialCode: '+27', flag: 'ğŸ‡¿ğŸ‡¦'),
    Country(name: 'South Korea', code: 'KR', dialCode: '+82', flag: 'ğŸ‡°ğŸ‡·'),
    Country(name: 'Spain', code: 'ES', dialCode: '+34', flag: 'ğŸ‡ªğŸ‡¸'),
    Country(name: 'Sweden', code: 'SE', dialCode: '+46', flag: 'ğŸ‡¸ğŸ‡ª'),
    Country(name: 'Switzerland', code: 'CH', dialCode: '+41', flag: 'ğŸ‡¨ğŸ‡­'),
    Country(name: 'Turkey', code: 'TR', dialCode: '+90', flag: 'ğŸ‡¹ğŸ‡·'),
    Country(name: 'United Kingdom', code: 'GB', dialCode: '+44', flag: 'ğŸ‡¬ğŸ‡§'),
    Country(name: 'United States', code: 'US', dialCode: '+1', flag: 'ğŸ‡ºğŸ‡¸'),
  ];

  late var selectedCountry = countries[45].obs;
  TextEditingController phoneController = TextEditingController();

  // Make isLoading reactive with .obs
  RxBool isLoading = false.obs;

  Future<void> sendOtp(BuildContext context) async {
    try {
      // Use value to update the observable
      isLoading.value = true;

      await FirebaseAuthService()
          .sendOtp(context, phoneController.text, selectedCountry.value);

      // Update the value after completion
      // isLoading.value = false;
      Future.delayed(const Duration(seconds: 3), () {
        isLoading.value = false;
      });
    } catch (e) {
      // Handle error and reset loading state
      print('Error sending OTP: $e');
      isLoading.value = false;
    }
  }

  @override
  void onClose() {
    log('called login controller');
    phoneController.dispose(); // Dispose the controller
    isLoading.value = false; // Reset loading state
    super.onClose();
  }
}
